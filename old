https://github.com/peterausneuss/linux-framebuffer-development/wiki

DirectFB (Direct Frame Buffer):
Was es ist: Eine Software-Bibliothek mit geringem Speicherbedarf, die Grafikanpassung, Eingabegeräte-Handling und eine Abstraktionsschicht direkt auf dem Linux-Framebuffer bietet. Sie kann auch ein integriertes Fenstersystem unterstützen.
Für deine Anforderungen: DirectFB ist ideal für das, was du beschreibst. Es wurde oft für Spiele und eingebettete Systeme verwendet, um den Overhead eines vollen X Window Systems zu umgehen. Es bietet Funktionen für das Zeichnen von Bitmaps, Blitting (schnelles Kopieren von Pixeldaten), Ebenenmanagement und Eingabeverarbeitung.
Vorteile: Bietet eine höhere Abstraktionsschicht als der direkte Framebuffer-Zugriff, unterstützt Hardware-Beschleunigung, wenn vom Treiber verfügbar, und ist darauf ausgelegt, ohne X zu laufen.
Nachteile: Die Entwicklung von DirectFB ist in den letzten Jahren etwas langsamer geworden, aber es gibt noch das "DirectFB2"-Projekt.

SDL (Simple DirectMedia Layer):
Was es ist: Eine beliebte plattformübergreifende Multimedia-Bibliothek, die eine hardwareunabhängige Schnittstelle für Grafiken, Audio, Eingabegeräte und mehr bietet. SDL ist weit verbreitet in der Spieleentwicklung.
Ohne X: SDL kann so konfiguriert werden, dass es direkt den Linux-Framebuffer verwendet (statt X11, Wayland oder andere Display-Server). Dies wird oft als "fbdev-Backend" oder "direct rendering" bezeichnet.
Für deine Anforderungen: SDL 2.0 bietet leistungsstarke 2D-Rendering-Funktionen, die ideal für Bitmap-Tiles und Sprites sind. Es abstrahiert die komplexen Details des Framebuffers für dich. Scrolling kann durch Anpassen der Render-Offsets oder durch geschicktes Blitting erreicht werden.
Vorteile: Sehr gut dokumentiert, große Community, viele Tutorials und Beispiele, hardwarebeschleunigtes 2D-Rendering auf unterstützter Hardware (auch ohne X), unterstützt alle von dir genannten Features.
Nachteile: Es ist eine Bibliothek, die du in C/C++ in deinem eigenen Programm verwenden musst. Du musst die gesamte Spiel- oder Anwendungsslogik selbst schreiben.

Allegro:
Was es ist: Eine weitere plattformübergreifende Spieleprogrammierbibliothek, ähnlich wie SDL, die sich auf 2D-Spiele und Multimedia konzentriert.
Ohne X: Allegro kann auch so konfiguriert werden, dass es direkt auf dem Linux-Framebuffer läuft, ohne X.
Für deine Anforderungen: Bietet alle notwendigen Funktionen für Bitmap-Grafiken, Sprites, Scrolling und Eingabeverarbeitung.
Vorteile: Eine etablierte Bibliothek mit einer guten Feature-Palette für 2D-Spiele.
Nachteile: Ähnlich wie SDL erfordert es die Programmierung der gesamten Logik.

Zusammenfassend: